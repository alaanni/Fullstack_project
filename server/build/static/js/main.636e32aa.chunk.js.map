{"version":3,"sources":["services/orderService.js","reducers/orderReducer.js","reducers/notificationReducer.js","services/productService.js","reducers/productReducer.js","services/orderLineService.js","reducers/orderLineReducer.js","Order/OrderLineForm.js","Order/OrderLineList.js","Order/Order.js","services/buildingService.js","reducers/buildingReducer.js","Order/OrderForm.js","Order/OrderList.js","Customer/AddBuildingForm.js","Customer/Customer.js","Customer/CustomerForm.js","services/customerService.js","reducers/customerReducer.js","Customer/CustomerList.js","services/loginService.js","components/LoginForm.js","components/Calendar.js","utils/config.js","components/Map.js","components/Home.js","components/Notification.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","update","order","put","id","remove","delete","reducer","state","action","console","log","type","filter","newNotification","content","sec","dispatch","timer","setTimeout","clearNotification","clearTimeout","product","orderLine","OrderLineForm","show","useDispatch","useState","ordersProduct","setOrdersProduct","products","useSelector","useEffect","productService","selectProducts","map","t","value","label","createLine","orderLineObject","orderLineService","newOrderLine","className","onSubmit","event","preventDefault","onChange","selectedType","options","Button","variant","OrderLineList","orderlines","orderLines","Table","orderline","key","quantity","Order","orders","history","useHistory","setError","page","setPage","removeOrder","find","window","confirm","customer","name","orderService","deleteOrder","catch","push","to","building","comment","onClick","object","OrderForm","createOrder","user","customerId","setCustomerId","setComment","ordersBuilding","setOrdersBuilding","customers","buildings","buildingService","names","c","selectBuilding","b","selectedId","style","width","height","target","OrderList","orderObject","newOrder","striped","status","AddBuildingForm","createBuilding","setType","street","setStreet","city","setCity","postalCode","setPostalCode","Form","Group","Label","Control","parseInt","Customer","phone","email","buildingObject","newBuilding","o","CustomerForm","createCustomer","setName","setPhone","setEmail","CustomerList","customerObject","customerService","newCustomer","login","credentials","LoginForm","handleLogin","setUsername","setPassword","Calendar","containerStyle","center","lat","lng","Map","googleMapsApiKey","GOOGLE_API_KEY","mapContainerStyle","zoom","Component","Home","ConnectedNotification","connect","notification","message","error","App","username","password","setUser","loggedUserJSON","localStorage","getItem","JSON","parse","loginService","setItem","stringify","matchOrder","useRouteMatch","params","matchCustomer","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","href","as","removeItem","path","combineReducers","customerReducer","orderReducer","orderLineReducer","notificationReducer","buildingReducer","productReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.636e32aa.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/orders'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async order => {\n  const response = await axios.put(`${baseUrl}/${order.id}`, order)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, setToken, update, remove }","import orderService from '../services/orderService'\n\nconst reducer = (state = [], action) => {\n\n  console.log('state now: ', state)\n  console.log('action', action)\n\n  switch(action.type) {\n    case 'INIT_ORDERS':\n      return action.data\n    case 'NEW_ORDER':\n      return [...state, action.data]\n    case 'REMOVE_ORDER':\n        return state.filter(order => order.id !== action.data)\n    default:\n      return state\n  }\n}\n\nexport const initOrders = (orders) => {\n  return async dispatch => {\n    const orders = await orderService.getAll()\n    dispatch({\n      type: 'INIT_ORDERS',\n      data: orders,\n    })\n  }\n}\n\nexport const createOrder = content => {\n  return async dispatch => {\n    const newOrder = await orderService.create(content)\n    dispatch ({\n      type: 'NEW_ORDER',\n      data: newOrder,\n    })\n  }\n}\n\nexport const deleteOrder = (id) => {\n    return async dispatch => {\n      await orderService.remove(id)\n      dispatch ({\n        type: 'REMOVE_ORDER',\n        data: id\n      })\n    }\n  }\n\nexport default reducer","const reducer = (state = { content: '', timer: null }, action) => {\n    switch(action.type) {\n      case 'NEW_NOTIFICATION':\n        if (state.timer !== null) {\n          clearTimeout(state.timer)\n        }\n        return { \n          content: action.data.content, \n          timer: action.data.timer \n        }\n      case 'CLEAR_NOTIFICATION':\n        return {\n          content: '',\n          timer: null\n        }\n      default:\n        return state\n    }\n  }\n  \n  export const newNotification = (content, sec) => {\n    return async dispatch => {\n      const timer = setTimeout(() => {\n        dispatch(clearNotification())\n      }, sec * 1000)\n      dispatch ({\n        type: 'NEW_NOTIFICATION',\n        data: { \n          content,\n          timer\n        }\n      })\n    }\n  }\n  \n  export const clearNotification = () => {\n    return {\n      type: 'CLEAR_NOTIFICATION'\n    }\n  }\n  \n  export default reducer","import axios from 'axios'\nconst baseUrl = '/api/products'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async product => {\n  const response = await axios.put(`${baseUrl}/${product.id}`, product)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, setToken, update, remove }","import productService from '../services/productService'\n\nconst reducer = (state = [], action) => {\n  \n  switch(action.type) {\n    case 'INIT_PRODUCTS':\n      return action.data\n    case 'NEW_PRODUCT':\n      return [...state, action.data]\n    case 'REMOVE_PRODUCT':\n        return state.filter(orderLine => orderLine.id !== action.data)\n    default:\n      return state\n  }\n}\n\nexport const initProducts = () => {\n  return async dispatch => {\n    const products = await productService.getAll()\n    dispatch({\n      type: 'INIT_PRODUCTS',\n      data: products,\n    })\n  }\n}\n\nexport const createProduct = content => {\n  return async dispatch => {\n    const newProduct = await productService.create(content)\n    dispatch ({\n      type: 'NEW_PRODUCT',\n      data: newProduct,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => {\n    return async dispatch => {\n      await productService.remove(id)\n      dispatch ({\n        type: 'REMOVE_PRODUCT',\n        data: id\n      })\n    }\n  }\n\nexport default reducer","import axios from 'axios'\nconst baseUrl = '/api/orderLines'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async orderLine => {\n  const response = await axios.put(`${baseUrl}/${orderLine.id}`, orderLine)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, setToken, update, remove }","import orderLineService from '../services/orderLineService'\n\nconst reducer = (state = [], action) => {\n  \n  switch(action.type) {\n    case 'INIT_ORDERLINES':\n      return action.data\n    case 'NEW_ORDERLINE':\n      return [...state, action.data]\n    case 'REMOVE_ORDERLINE':\n        return state.filter(orderLine => orderLine.id !== action.data)\n    default:\n      return state\n  }\n}\n\nexport const initOrderLines = () => {\n  return async dispatch => {\n    const orderLines = await orderLineService.getAll()\n    dispatch({\n      type: 'INIT_ORDERLINES',\n      data: orderLines,\n    })\n  }\n}\n\nexport const createOrderLine = content => {\n  return async dispatch => {\n    const newOrderLine = await orderLineService.create(content)\n    dispatch ({\n      type: 'NEW_ORDERLINE',\n      data: newOrderLine,\n    })\n  }\n}\n\nexport const deleteOrderLine = (id) => {\n    return async dispatch => {\n      await orderLineService.remove(id)\n      dispatch ({\n        type: 'REMOVE_ORDERLINE',\n        data: id\n      })\n    }\n  }\n\nexport default reducer","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { initProducts } from '../reducers/productReducer'\nimport { createOrderLine } from '../reducers/orderLineReducer'\nimport { Button } from 'react-bootstrap'\n\nconst OrderLineForm = ({ show, order }) => {\n  const dispatch = useDispatch()\n  const [ordersProduct, setOrdersProduct] = useState('')\n  const products = useSelector(state => state.products)\n\n  useEffect(() => {\n    dispatch(initProducts())\n  }, [dispatch])\n\n  if (!show) {\n    return null\n  }\n\n  const selectProducts = products.map(t => { return { value: t.product, label: t.product } })\n\n  const addOrderLine = (event) => {\n    event.preventDefault()\n    createLine({\n      product: ordersProduct,\n      order: order\n    })\n    setOrdersProduct('');\n  }\n\n  const createLine = (orderLineObject) => {\n    dispatch(createOrderLine(orderLineObject))\n}\n\n  return(\n    <div className='formDiv'>\n      <form onSubmit={addOrderLine}>\n        <div>\n          Product\n          <Select \n              value={ordersProduct} \n              onChange={(selectedType) => setOrdersProduct(selectedType)}\n              options={selectProducts}         \n            />\n        </div>\n        <Button variant='primary' className='create-button' type='submit'>Add</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default OrderLineForm","import React, { useEffect } from 'react'\nimport { Table } from 'react-bootstrap'\nimport { initOrderLines } from '../reducers/orderLineReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst OrderLineList = ({ order }) => {\n    const orderlines = useSelector(state => state.orderLines)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(initOrderLines())\n      }, [dispatch])\n\n    if(!orderlines) return null\n    return (\n    <div>\n        <h2>Orderlines</h2>\n        <Table>\n        <tbody>\n            {orderlines.map(orderline =>\n            <tr key={orderline.id}>\n                <td>\n                    {orderline.product}\n                </td>\n                <td>\n                    {orderline.quantity}\n                </td>\n                <td>\n                    price\n                </td>\n                <td>\n                    <button>remove line</button>\n                </td>\n            </tr>\n            )}\n        </tbody>\n        </Table>\n    </div>\n    )\n}\n\nexport default OrderLineList ","import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteOrder } from '../reducers/orderReducer'\nimport { newNotification } from '../reducers/notificationReducer'\nimport OrderLineForm from './OrderLineForm'\nimport OrderLineList from './OrderLineList'\nimport { Link } from 'react-router-dom'\n\nconst Order = ({ order }) => {\n  const orders = useSelector(state => state.orders)\n  const history = useHistory()\n  const dispatch = useDispatch()  \n  const [, setError] = useState(false)\n  const [page, setPage] = useState('')\n\n  const handleRemove = (event) => {\n    event.preventDefault()\n    removeOrder(order.id)\n  }\n\n  const removeOrder = (id) => {\n    const order = orders.find(order => order.id === id)\n    if (window.confirm(`Removing order from ${order.customer.name}`)) {\n      dispatch(deleteOrder(id))\n        .catch(() => {\n          setError(true)\n          dispatch(newNotification(`Order ${order.id} from ${order.customer.name} was already deleted from server`, 5))\n        })\n      setError(false)\n    }\n    history.push(\"/orders\")\n  }\n\n  if (!order) {\n    return null\n  }\n\n  return (\n    <div className='order'>\n      <h2>Order information</h2>\n      <div>\n        <p>Customer: <Link to={`/customers/${order.customer.id}`}>{order.customer.name}</Link></p>\n        <p>Building: <Link to={`/buildings/${order.building.id}`}>{order.building.type}</Link></p>\n        <p>Additional details: {order.comment}</p>\n      </div>\n      <OrderLineList order={order}/>\n      <br></br>\n      <OrderLineForm show={page === 'new orderline'} order={order}/>\n      <br></br>\n      {page === '' ? \n        <Button variant='primary' onClick={() => setPage('new orderline')}>Add new orderline</Button>\n        : <Button variant='secondary' onClick={() => setPage('')}>cancel</Button>\n        }\n      {' '}<Button variant='danger' onClick={handleRemove}>remove</Button>\n    </div>\n  )}\n\nexport default Order\n","import axios from 'axios'\nconst baseUrl = '/api/buildings'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = async object => {\n  const response = await axios.put(`${baseUrl}/${object.id}`, object)\n  return response.data\n}\n\nconst remove = async object => {\n  const response = await axios.delete(`${baseUrl}/${object.id}`)\n  return response.data\n}\n\nexport default { getAll, create, update, remove }","import buildingService from '../services/buildingService'\n\nconst reducer = (state = [], action) => {\n\n  switch(action.type) {\n    case 'INIT_BUILDINGS':\n      return action.data\n    case 'NEW_BUILDING':\n      return [...state, action.data]\n    default:\n      return state\n  }\n}\n\nexport const initBuildings = () => {\n  return async dispatch => {\n    const buildings = await buildingService.getAll()\n    dispatch({\n      type: 'INIT_BUILDINGS',\n      data: buildings,\n    })\n  }\n}\n\nexport const createBuilding = content => {\n  return async dispatch => {\n    const newBuilding = await buildingService.create(content)\n    dispatch ({\n      type: 'NEW_BUILDING',\n      data: newBuilding,\n    })\n  }\n}\n\nexport default reducer","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { initBuildings } from '../reducers/buildingReducer'\nimport { Button } from 'react-bootstrap'\n\nconst OrderForm = ({ \n  createOrder, \n  user, \n  show \n  }) => {\n\n  const dispatch = useDispatch()\n\n  const [customerId, setCustomerId] = useState('')\n  const [comment, setComment] = useState('')\n  const [ordersBuilding, setOrdersBuilding] = useState('')\n  const customers = useSelector(state => state.customers)\n  const buildings = useSelector(state => state.buildings)\n\n  useEffect(() => {\n    dispatch(initBuildings())\n  }, [dispatch])\n\n  if (!show) {\n    return null\n  }\n\n  const names = customers.map(c => { return { value: c.id, label: c.name } })\n  const selectBuilding = buildings.map(b => { return { value: b, label: b.type} })\n\n  const addOrder = (event) => {\n    event.preventDefault()\n    createOrder({\n      customer: customerId.value,\n      building : ordersBuilding.value.id,\n      user: user,\n      comment: comment\n    })\n    setCustomerId('')\n    setOrdersBuilding('')\n    setComment('')\n  }\n\n  return(\n    <div className='formDiv'>\n      <h2>New order</h2>\n\n      <form onSubmit={addOrder}>\n        <div>\n          Select customer\n          <Select \n              value={customerId} \n              onChange={(selectedId) => setCustomerId(selectedId)}\n              options={names}         \n            />\n        </div>\n        {}\n        <div>\n          Select building\n          <Select \n              value={ordersBuilding} \n              onChange={(selectedType) => setOrdersBuilding(selectedType)}\n              options={selectBuilding.filter(b => b.value.customer === customerId.value)}        \n            />\n        </div>\n        <div>Comment</div>\n        <div>\n          <input\n            style={{width: \"690px\", height: \"100px\"}}\n            value={comment}\n            onChange={({ target }) => setComment(target.value)}\n          />\n        </div>\n        <Button variant='primary' className='create-button' type=\"submit\">add new order</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default OrderForm","import React, { useState } from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport OrderForm from './OrderForm'\nimport { createOrder } from '../reducers/orderReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nconst OrderList = ({ user }) => {\n    const [page, setPage] = useState('')\n    const orders = useSelector(state => state.orders)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const addOrder = (orderObject) => {\n        dispatch(createOrder(orderObject))\n        setPage('')\n        history.push(\"/orders\")\n    }\n    return (\n    <div>\n        {page === '' ? \n        <Button variant='primary' onClick={() => setPage('new order')}>Add new order</Button>\n        : <Button variant='secondary' onClick={() => setPage('')}>cancel</Button>\n        }\n        <OrderForm \n            show={page === 'new order'}\n            createOrder={addOrder} \n            user={user}\n        />\n        <h2>Orders</h2>\n        <Table striped>\n        <tbody>\n            {orders.map(order =>\n            <tr key={order.id}>\n                <td>\n                    <Link to={`/orders/${order.id}`}>\n                    {order.id}\n                    </Link>\n                </td>\n                <td>\n                    <Link to={`/customers/${order.customer.id}`}>\n                    {order.customer.name}\n                    </Link>\n                </td>\n                <td>\n                    {order.status}\n                </td>\n            </tr>\n            )}\n        </tbody>\n        </Table>\n    </div>\n    )\n}\n\nexport default OrderList","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddBuildingForm = ({ show, createBuilding, customer }) => {\n\n  const [type, setType] = useState('')\n  const [street, setStreet] = useState('')\n  const [city, setCity] = useState('')\n  const [postalCode, setPostalCode] = useState('')\n  const [comment, setComment] = useState('')\n\n  if (!show) {\n    return null\n  }\n\n  const addBuilding = (event) => {\n    event.preventDefault()\n    createBuilding({\n      customer,\n      type,\n      street,\n      city,\n      postalCode,\n      comment\n    })\n\n  }\n\n  return (\n    <div>\n    <h2>New building</h2>\n    <Form onSubmit={addBuilding}>\n      <Form.Group>\n        <Form.Label>Type</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"type\"\n          onChange={({ target }) => setType(target.value)}\n        />\n        <Form.Label>Street</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"street\"\n          onChange={({ target }) => setStreet(target.value)}\n        />\n        <Form.Label>City</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"city\"\n          onChange={({ target }) => setCity(target.value)}\n        />\n        <Form.Label>Postal code</Form.Label>\n        <Form.Control\n          type=\"postalCode\"\n          onChange={({ target }) => setPostalCode(parseInt(target.value))}\n        />\n        <Form.Label>Add comment</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"comment\"\n          onChange={({ target }) => setComment(target.value)}\n        />\n        <Button variant=\"primary\" type=\"submit\">\n          Add building\n        </Button>\n      </Form.Group>\n    </Form>\n    </div>\n  )\n}\n\nexport default AddBuildingForm","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux'\nimport { createBuilding } from '../reducers/buildingReducer'\nimport AddBuildingForm from './AddBuildingForm'\n\nconst Customer = ({ customer }) => {\n    const [page, setPage] = useState('')\n    const dispatch = useDispatch()\n\n    const addBuilding = (buildingObject) => {\n        dispatch(createBuilding(buildingObject))\n        setPage('')\n    }\n\n    if (!customer) {\n        return null\n    }\n\n    return (\n        <div>\n            <h3>{customer.name}</h3>\n            <div>{customer.phone}</div>\n            <div>{customer.email}</div>\n            <div>{customer.street}, </div>\n            <div>{customer.postalCode}, {customer.city}</div>\n            <h4>Buildings:</h4>\n            {page === '' ? \n            <Button variant='primary' onClick={() => setPage('new building')}>Add new building to {customer.name}</Button>\n            : <Button variant='secondary' onClick={() => setPage('')}>cancel</Button>\n            }\n        \n            <AddBuildingForm\n                show={page === 'new building'}\n                createBuilding={addBuilding}\n                customer={customer.id}\n            />\n            <div>{customer.buildings.map(b => \n            <div key={b.id}><Link to={`/buildings/${b.id}`}>{b.type}</Link></div>)}\n            </div>\n            <h4>Orders:</h4>\n            <div>{customer.orders.map(o => \n            <div key={o.id}><Link to={`/orders/${o.id}`}>{o.id}</Link></div>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Customer","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst CustomerForm = ({ \n  createCustomer, \n  show \n  }) => {\n\n  const [name, setName] = useState('')\n  const [phone, setPhone] = useState('')\n  const [email, setEmail] = useState('')\n  const [street, setStreet] = useState('')\n  const [city, setCity] = useState('')\n  const [postalCode, setPostalCode] = useState('')\n  const [comment, setComment] = useState('')\n\n  if (!show) {\n    return null\n  }\n\n  const addCustomer = (event) => {\n    event.preventDefault()\n    createCustomer({\n      name,\n      phone,\n      email,\n      street,\n      city,\n      postalCode,\n      comment\n    })\n  }\n\n  return (\n    <div>\n    <h2>New customer</h2>\n    <Form onSubmit={addCustomer}>\n      <Form.Group>\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          onChange={({ target }) => setName(target.value)}\n        />\n        <Form.Label>Phone</Form.Label>\n        <Form.Control\n          type=\"phone\"\n          onChange={({ target }) => setPhone(parseInt(target.value))}\n        />\n        <Form.Label>Email</Form.Label>\n        <Form.Control\n          type=\"email\"\n          onChange={({ target }) => setEmail(target.value)}\n        />\n        <Form.Label>Street</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"street\"\n          onChange={({ target }) => setStreet(target.value)}\n        />\n        <Form.Label>City</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"city\"\n          onChange={({ target }) => setCity(target.value)}\n        />\n        <Form.Label>Postal code</Form.Label>\n        <Form.Control\n          type=\"postalCode\"\n          onChange={({ target }) => setPostalCode(parseInt(target.value))}\n        />\n        <Form.Label>Add comment</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"comment\"\n          onChange={({ target }) => setComment(target.value)}\n        />\n        <Button variant=\"primary\" type=\"submit\">\n          Add new customer\n        </Button>\n      </Form.Group>\n    </Form>\n    </div>\n  )\n}\n\nexport default CustomerForm","import axios from 'axios'\nconst baseUrl = '/api/customers'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = async customer => {\n  const response = await axios.put(`${baseUrl}/${customer.id}`, customer)\n  return response.data\n}\n\nconst remove = async customer => {\n  const response = await axios.delete(`${baseUrl}/${customer.id}`)\n  return response.data\n}\n\nexport default { getAll, create, update, remove }","import customerService from '../services/customerService'\n\nconst reducer = (state = [], action) => {\n\n  console.log('state now: ', state)\n  console.log('action', action)\n\n  switch(action.type) {\n    case 'INIT_CUSTOMERS':\n      return action.data\n    case 'NEW_CUSTOMER':\n      return [...state, action.data]\n    default:\n      return state\n  }\n}\n\nexport const initCustomers = () => {\n  return async dispatch => {\n    const customers = await customerService.getAll()\n    dispatch({\n      type: 'INIT_CUSTOMERS',\n      data: customers,\n    })\n  }\n}\n\nexport const createCustomer = content => {\n  return async dispatch => {\n    const newCustomer = await customerService.create(content)\n    dispatch ({\n      type: 'NEW_CUSTOMER',\n      data: newCustomer,\n    })\n  }\n}\n\nexport default reducer","import React, { useState } from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport CustomerForm from './CustomerForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createCustomer } from '../reducers/customerReducer'\nimport { newNotification } from '../reducers/notificationReducer'\n\nconst CustomerList = () => {\n    const [page, setPage] = useState('')\n    const customers = useSelector(state => state.customers)\n    const dispatch = useDispatch()\n\n    const addCustomer = (customerObject) => {\n        dispatch(createCustomer(customerObject))\n        dispatch(newNotification(`Added new customer ${customerObject.name}`, 5))\n        setPage('')\n    }\n\n    return (       \n        <div>\n            {page === '' ? \n            <Button variant='primary' onClick={() => setPage('new customer')}>Add new customer</Button>\n            : <Button variant='secondary' onClick={() => setPage('')}>cancel</Button>\n            }\n        \n            <CustomerForm\n                show={page === 'new customer'}\n                createCustomer={addCustomer}\n            />\n\n            <h2>Customers</h2>\n            <Table striped>\n                <tbody>\n                {customers.map(customer =>\n                <tr key={customer.id}>\n                <td>\n                <Link to={`/customers/${customer.id}`}>\n                    {customer.name}\n                </Link>\n                </td>\n                <td>\n                    {customer.postalCode}\n                </td>\n                </tr>\n                )}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default CustomerList","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Button } from 'react-bootstrap'\n\nconst LoginForm = ({\n  handleLogin,\n  setUsername,\n  setPassword\n}) => {\n  return (\n    <div>\n    <h2>Login</h2>\n    <Form onSubmit={handleLogin}>\n      <Form.Group>\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n        <Button variant=\"primary\" type=\"submit\">\n          Login\n        </Button>\n      </Form.Group>\n    </Form>\n  </div>\n  )\n}\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  setUsername: PropTypes.func.isRequired,\n  setPassword: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React from 'react'\n\nconst Calendar = () => {\n    return (\n    <div>kalenteri</div>\n    )\n}\nexport default Calendar;","\nlet GOOGLE_API_KEY = \"AIzaSyCO2J7KlY3Y5D4tDp0DASxDs99nUnqybAU\"\n\nexport default {\n  GOOGLE_API_KEY\n}","import React, { Component } from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport GOOGLE_API_KEY from '../utils/config'\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst center = {\n  lat: 62.79446,\n  lng: 22.82822\n};\n\nclass Map extends Component {\n  render() {\n    return (\n      <LoadScript\n        googleMapsApiKey={GOOGLE_API_KEY.GOOGLE_API_KEY}\n      >\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={10}\n        >\n          { /* Child components, such as markers, info windows, etc. */ }\n          <></>\n        </GoogleMap>\n      </LoadScript>\n    )\n  }\n}\nexport default Map","import React from 'react';\nimport Calendar from './Calendar'\nimport Map from './Map'\n\nconst Home = () => (\n\n    <div> \n      <h2>Homepage</h2> \n\n      <Calendar/> \n      <Map/>\n    </div>\n  )\nexport default Home","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Notification = ({ message, error }) => {\n  if (message === '') {\n    return null\n  }\n\n  return (\n    <div className={error ? 'error' : 'notification'}>\n      {message}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  if (state.notification.content === null) {\n    return null\n  }\n  return {\n    message: state.notification.content\n  }\n}\n\nconst ConnectedNotification = connect(mapStateToProps)(Notification)\n\nexport default ConnectedNotification","import React, { useState, useEffect } from 'react'\nimport Order from './Order/Order'\nimport OrderList from './Order/OrderList'\nimport Customer from './Customer/Customer'\nimport CustomerList from './Customer/CustomerList'\nimport loginService from './services/loginService'\nimport orderService from './services/orderService'\nimport LoginForm from './components/LoginForm'\nimport Home from './components/Home'\nimport Notification from './components/Notification'\nimport {\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useRouteMatch,\n  useHistory\n} from \"react-router-dom\"\nimport { Navbar, Nav, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initCustomers } from './reducers/customerReducer'\nimport { newNotification } from './reducers/notificationReducer'\nimport { initOrders } from './reducers/orderReducer'\n\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [error, setError] = useState(false)\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const message = useSelector(state => state.message)\n  const orders = useSelector(state => state.orders)\n  const customers = useSelector(state => state.customers)\n  \n  useEffect(() => {\n    dispatch(initCustomers())\n    dispatch(initOrders())\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      orderService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n\n      orderService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setError(true)\n      dispatch(newNotification('wrong credentials', 5))\n    }\n    history.push(\"/home\")\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  const matchOrder = useRouteMatch('/orders/:id')\n  const order = matchOrder \n    ? orders.find(order => order.id === matchOrder.params.id)\n    : null\n\n  const matchCustomer = useRouteMatch('/customers/:id')\n  const customer = matchCustomer \n    ? customers.find(customer => customer.id === matchCustomer.params.id)\n    : null\n\n  return (\n    <div className=\"container\">\n      <Notification message={message} error={error} />\n\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\">\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#\" as=\"span\">\n              {user ? <Link to=\"/\">Home</Link> : null}\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              {user ? <Link to=\"/orders\">Orders</Link> : null}\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              {user ? <Link to=\"/customers\">Customers</Link> : null}\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              {user\n                ? <em>{user.name} logged in {' '}\n                <Button variant='outline-secondary' onClick={handleLogout}><em>logout</em></Button></em>\n                : <Link to=\"/login\"></Link>\n              }\n          </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route path=\"/orders/:id\">\n          <Order \n            order={order}\n            />\n        </Route>\n        <Route path=\"/orders\">\n          {user ? <OrderList \n            user={user}\n            />\n            : <Redirect to=\"/login\" />}\n        </Route>\n        <Route path=\"/customers/:id\">\n          <Customer \n            customer={customer}\n            />\n        </Route>\n        <Route path=\"/customers\">\n          {user ? <CustomerList />\n            : <Redirect to=\"/login\" />}\n        </Route>\n        <Route path=\"/login\">\n          {!user ? \n          <LoginForm\n            username={username}\n            password={password}\n            setUsername={setUsername}\n            setPassword={setPassword}\n            handleLogin={handleLogin} \n            /> : <Redirect to=\"/home\" />}\n        </Route>\n        <Route path=\"/\">\n          {user ? <Home /> : <Redirect to=\"/login\" />}\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport customerReducer from './reducers/customerReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport orderReducer from './reducers/orderReducer'\nimport orderLineReducer from './reducers/orderLineReducer'\nimport buildingReducer from './reducers/buildingReducer'\nimport productReducer from './reducers/productReducer'\n\nconst reducer = combineReducers({\n    customers: customerReducer,\n    orders: orderReducer,\n    orderLines: orderLineReducer,\n    notification: notificationReducer,\n    buildings: buildingReducer,\n    products: productReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n    document.getElementById('root')\n  )"],"sourceRoot":""}